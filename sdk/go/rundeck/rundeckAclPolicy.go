// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rundeck

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RundeckAclPolicy struct {
	pulumi.CustomResourceState

	// The name of the policy. Must end with `.aclpolicy`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the job, used to describe the job in the Rundeck UI.
	Policy pulumi.StringOutput `pulumi:"policy"`
}

// NewRundeckAclPolicy registers a new resource with the given unique name, arguments, and options.
func NewRundeckAclPolicy(ctx *pulumi.Context,
	name string, args *RundeckAclPolicyArgs, opts ...pulumi.ResourceOption) (*RundeckAclPolicy, error) {
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	if args == nil {
		args = &RundeckAclPolicyArgs{}
	}
	var resource RundeckAclPolicy
	err := ctx.RegisterResource("rundeck:index/rundeckAclPolicy:RundeckAclPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRundeckAclPolicy gets an existing RundeckAclPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRundeckAclPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RundeckAclPolicyState, opts ...pulumi.ResourceOption) (*RundeckAclPolicy, error) {
	var resource RundeckAclPolicy
	err := ctx.ReadResource("rundeck:index/rundeckAclPolicy:RundeckAclPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RundeckAclPolicy resources.
type rundeckAclPolicyState struct {
	// The name of the policy. Must end with `.aclpolicy`.
	Name *string `pulumi:"name"`
	// The name of the job, used to describe the job in the Rundeck UI.
	Policy *string `pulumi:"policy"`
}

type RundeckAclPolicyState struct {
	// The name of the policy. Must end with `.aclpolicy`.
	Name pulumi.StringPtrInput
	// The name of the job, used to describe the job in the Rundeck UI.
	Policy pulumi.StringPtrInput
}

func (RundeckAclPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*rundeckAclPolicyState)(nil)).Elem()
}

type rundeckAclPolicyArgs struct {
	// The name of the policy. Must end with `.aclpolicy`.
	Name *string `pulumi:"name"`
	// The name of the job, used to describe the job in the Rundeck UI.
	Policy string `pulumi:"policy"`
}

// The set of arguments for constructing a RundeckAclPolicy resource.
type RundeckAclPolicyArgs struct {
	// The name of the policy. Must end with `.aclpolicy`.
	Name pulumi.StringPtrInput
	// The name of the job, used to describe the job in the Rundeck UI.
	Policy pulumi.StringInput
}

func (RundeckAclPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rundeckAclPolicyArgs)(nil)).Elem()
}
