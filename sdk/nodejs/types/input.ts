// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface RundeckJobCommand {
    /**
     * A longer description of the job, describing the job in the Rundeck UI.
     */
    description?: pulumi.Input<string>;
    /**
     * gives a whole shell script, inline in the configuration, to execute on the nodes.
     */
    inlineScript?: pulumi.Input<string>;
    jobs?: pulumi.Input<pulumi.Input<inputs.RundeckJobCommandJob>[]>;
    nodeStepPlugins?: pulumi.Input<pulumi.Input<inputs.RundeckJobCommandNodeStepPlugin>[]>;
    /**
     * and `scriptFileArgs` together describe a script that is already pre-installed
     * on the nodes which is to be executed.
     */
    scriptFile?: pulumi.Input<string>;
    scriptFileArgs?: pulumi.Input<string>;
    /**
     * gives a single shell command to execute on the nodes.
     */
    shellCommand?: pulumi.Input<string>;
    stepPlugins?: pulumi.Input<pulumi.Input<inputs.RundeckJobCommandStepPlugin>[]>;
}

export interface RundeckJobCommandJob {
    args?: pulumi.Input<string>;
    /**
     * The name of a group within the project in which to place the job.
     * Setting this creates collapsable subcategories within the Rundeck UI's project job index.
     */
    groupName?: pulumi.Input<string>;
    /**
     * The name of the job, used to describe the job in the Rundeck UI.
     */
    name: pulumi.Input<string>;
    nodefilters?: pulumi.Input<inputs.RundeckJobCommandJobNodefilters>;
    runForEachNode?: pulumi.Input<boolean>;
}

export interface RundeckJobCommandJobNodefilters {
    excludeprecedence?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface RundeckJobCommandNodeStepPlugin {
    /**
     * Map of arbitrary configuration properties for the selected plugin.
     */
    config?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the plugin to use.
     */
    type: pulumi.Input<string>;
}

export interface RundeckJobCommandStepPlugin {
    /**
     * Map of arbitrary configuration properties for the selected plugin.
     */
    config?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the plugin to use.
     */
    type: pulumi.Input<string>;
}

export interface RundeckJobNotification {
    emails?: pulumi.Input<pulumi.Input<inputs.RundeckJobNotificationEmail>[]>;
    plugins?: pulumi.Input<pulumi.Input<inputs.RundeckJobNotificationPlugin>[]>;
    /**
     * The name of the plugin to use.
     */
    type: pulumi.Input<string>;
    webhookUrls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RundeckJobNotificationEmail {
    attachLog?: pulumi.Input<boolean>;
    recipients: pulumi.Input<pulumi.Input<string>[]>;
    subject?: pulumi.Input<string>;
}

export interface RundeckJobNotificationPlugin {
    /**
     * Map of arbitrary configuration properties for the selected plugin.
     */
    config?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the plugin to use.
     */
    type: pulumi.Input<string>;
}

export interface RundeckJobOption {
    allowMultipleValues?: pulumi.Input<boolean>;
    defaultValue?: pulumi.Input<string>;
    /**
     * A longer description of the job, describing the job in the Rundeck UI.
     */
    description?: pulumi.Input<string>;
    exposedToScripts?: pulumi.Input<boolean>;
    multiValueDelimiter?: pulumi.Input<string>;
    /**
     * The name of the job, used to describe the job in the Rundeck UI.
     */
    name: pulumi.Input<string>;
    obscureInput?: pulumi.Input<boolean>;
    requirePredefinedChoice?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
    validationRegex?: pulumi.Input<string>;
    valueChoices?: pulumi.Input<pulumi.Input<string>[]>;
    valueChoicesUrl?: pulumi.Input<string>;
}

export interface RundeckProjectResourceModelSource {
    /**
     * Map of arbitrary configuration properties for the selected resource model
     * plugin.
     */
    config: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the resource model plugin to use.
     */
    type: pulumi.Input<string>;
}
