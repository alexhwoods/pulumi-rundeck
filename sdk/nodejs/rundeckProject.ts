// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RundeckProject extends pulumi.CustomResource {
    /**
     * Get an existing RundeckProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RundeckProjectState, opts?: pulumi.CustomResourceOptions): RundeckProject {
        return new RundeckProject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rundeck:index/rundeckProject:RundeckProject';

    /**
     * Returns true if the given object is an instance of RundeckProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RundeckProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RundeckProject.__pulumiType;
    }

    /**
     * The name of a plugin to use to run commands on
     * nodes within this project. Defaults to `jsch-ssh`, which uses the SSH protocol to access the
     * nodes.
     */
    public readonly defaultNodeExecutorPlugin!: pulumi.Output<string | undefined>;
    /**
     * The name of a plugin to use to copy files onto
     * nodes within this project. Defaults to `jsch-scp`, which uses the "Secure Copy" protocol
     * to send files over SSH.
     */
    public readonly defaultNodeFileCopierPlugin!: pulumi.Output<string | undefined>;
    /**
     * Description of the project to be shown in the Rundeck UI
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Additional raw configuration parameters to include in the project configuration, with dots replaced with slashes in the
     * key names due to limitations in Terraform's config language.
     */
    public readonly extraConfig!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The name of the project, used both in the UI and to uniquely identify
     * the project. Must therefore be unique across a single Rundeck installation.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Nested block instructing Rundeck on how to determine the
     * set of resources (nodes) for this project. The nested block structure is described below.
     */
    public readonly resourceModelSources!: pulumi.Output<outputs.RundeckProjectResourceModelSource[]>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the type of SSH authentication to use. Defaults to `privateKey`.
     */
    public readonly sshAuthenticationType!: pulumi.Output<string | undefined>;
    /**
     * Like `sshKeyStoragePath` except that the key is read from
     * the Rundeck server's local filesystem, rather than from the key store.
     */
    public readonly sshKeyFilePath!: pulumi.Output<string | undefined>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the location within Rundeck's key store where the SSH private key can be found. Private
     * keys can be uploaded to rundeck using the `rundeck.RundeckPrivateKey` resource.
     */
    public readonly sshKeyStoragePath!: pulumi.Output<string | undefined>;
    /**
     * The URL of the index page for this project in the Rundeck UI.
     */
    public /*out*/ readonly uiUrl!: pulumi.Output<string>;

    /**
     * Create a RundeckProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RundeckProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RundeckProjectArgs | RundeckProjectState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as RundeckProjectState | undefined;
            inputs["defaultNodeExecutorPlugin"] = state ? state.defaultNodeExecutorPlugin : undefined;
            inputs["defaultNodeFileCopierPlugin"] = state ? state.defaultNodeFileCopierPlugin : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["extraConfig"] = state ? state.extraConfig : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceModelSources"] = state ? state.resourceModelSources : undefined;
            inputs["sshAuthenticationType"] = state ? state.sshAuthenticationType : undefined;
            inputs["sshKeyFilePath"] = state ? state.sshKeyFilePath : undefined;
            inputs["sshKeyStoragePath"] = state ? state.sshKeyStoragePath : undefined;
            inputs["uiUrl"] = state ? state.uiUrl : undefined;
        } else {
            const args = argsOrState as RundeckProjectArgs | undefined;
            if (!args || args.resourceModelSources === undefined) {
                throw new Error("Missing required property 'resourceModelSources'");
            }
            inputs["defaultNodeExecutorPlugin"] = args ? args.defaultNodeExecutorPlugin : undefined;
            inputs["defaultNodeFileCopierPlugin"] = args ? args.defaultNodeFileCopierPlugin : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["extraConfig"] = args ? args.extraConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceModelSources"] = args ? args.resourceModelSources : undefined;
            inputs["sshAuthenticationType"] = args ? args.sshAuthenticationType : undefined;
            inputs["sshKeyFilePath"] = args ? args.sshKeyFilePath : undefined;
            inputs["sshKeyStoragePath"] = args ? args.sshKeyStoragePath : undefined;
            inputs["uiUrl"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(RundeckProject.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RundeckProject resources.
 */
export interface RundeckProjectState {
    /**
     * The name of a plugin to use to run commands on
     * nodes within this project. Defaults to `jsch-ssh`, which uses the SSH protocol to access the
     * nodes.
     */
    readonly defaultNodeExecutorPlugin?: pulumi.Input<string>;
    /**
     * The name of a plugin to use to copy files onto
     * nodes within this project. Defaults to `jsch-scp`, which uses the "Secure Copy" protocol
     * to send files over SSH.
     */
    readonly defaultNodeFileCopierPlugin?: pulumi.Input<string>;
    /**
     * Description of the project to be shown in the Rundeck UI
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Additional raw configuration parameters to include in the project configuration, with dots replaced with slashes in the
     * key names due to limitations in Terraform's config language.
     */
    readonly extraConfig?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the project, used both in the UI and to uniquely identify
     * the project. Must therefore be unique across a single Rundeck installation.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Nested block instructing Rundeck on how to determine the
     * set of resources (nodes) for this project. The nested block structure is described below.
     */
    readonly resourceModelSources?: pulumi.Input<pulumi.Input<inputs.RundeckProjectResourceModelSource>[]>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the type of SSH authentication to use. Defaults to `privateKey`.
     */
    readonly sshAuthenticationType?: pulumi.Input<string>;
    /**
     * Like `sshKeyStoragePath` except that the key is read from
     * the Rundeck server's local filesystem, rather than from the key store.
     */
    readonly sshKeyFilePath?: pulumi.Input<string>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the location within Rundeck's key store where the SSH private key can be found. Private
     * keys can be uploaded to rundeck using the `rundeck.RundeckPrivateKey` resource.
     */
    readonly sshKeyStoragePath?: pulumi.Input<string>;
    /**
     * The URL of the index page for this project in the Rundeck UI.
     */
    readonly uiUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RundeckProject resource.
 */
export interface RundeckProjectArgs {
    /**
     * The name of a plugin to use to run commands on
     * nodes within this project. Defaults to `jsch-ssh`, which uses the SSH protocol to access the
     * nodes.
     */
    readonly defaultNodeExecutorPlugin?: pulumi.Input<string>;
    /**
     * The name of a plugin to use to copy files onto
     * nodes within this project. Defaults to `jsch-scp`, which uses the "Secure Copy" protocol
     * to send files over SSH.
     */
    readonly defaultNodeFileCopierPlugin?: pulumi.Input<string>;
    /**
     * Description of the project to be shown in the Rundeck UI
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Additional raw configuration parameters to include in the project configuration, with dots replaced with slashes in the
     * key names due to limitations in Terraform's config language.
     */
    readonly extraConfig?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the project, used both in the UI and to uniquely identify
     * the project. Must therefore be unique across a single Rundeck installation.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Nested block instructing Rundeck on how to determine the
     * set of resources (nodes) for this project. The nested block structure is described below.
     */
    readonly resourceModelSources: pulumi.Input<pulumi.Input<inputs.RundeckProjectResourceModelSource>[]>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the type of SSH authentication to use. Defaults to `privateKey`.
     */
    readonly sshAuthenticationType?: pulumi.Input<string>;
    /**
     * Like `sshKeyStoragePath` except that the key is read from
     * the Rundeck server's local filesystem, rather than from the key store.
     */
    readonly sshKeyFilePath?: pulumi.Input<string>;
    /**
     * When the SSH-based file copier and executor plugins are
     * used, the location within Rundeck's key store where the SSH private key can be found. Private
     * keys can be uploaded to rundeck using the `rundeck.RundeckPrivateKey` resource.
     */
    readonly sshKeyStoragePath?: pulumi.Input<string>;
}
