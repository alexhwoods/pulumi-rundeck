// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rundeck.Inputs
{

    public sealed class RundeckJobCommandGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A longer description of the job, describing the job in the Rundeck UI.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// gives a whole shell script, inline in the configuration, to execute on the nodes.
        /// </summary>
        [Input("inlineScript")]
        public Input<string>? InlineScript { get; set; }

        [Input("jobs")]
        private InputList<Inputs.RundeckJobCommandJobGetArgs>? _jobs;
        public InputList<Inputs.RundeckJobCommandJobGetArgs> Jobs
        {
            get => _jobs ?? (_jobs = new InputList<Inputs.RundeckJobCommandJobGetArgs>());
            set => _jobs = value;
        }

        [Input("nodeStepPlugins")]
        private InputList<Inputs.RundeckJobCommandNodeStepPluginGetArgs>? _nodeStepPlugins;
        public InputList<Inputs.RundeckJobCommandNodeStepPluginGetArgs> NodeStepPlugins
        {
            get => _nodeStepPlugins ?? (_nodeStepPlugins = new InputList<Inputs.RundeckJobCommandNodeStepPluginGetArgs>());
            set => _nodeStepPlugins = value;
        }

        /// <summary>
        /// and `script_file_args` together describe a script that is already pre-installed
        /// on the nodes which is to be executed.
        /// </summary>
        [Input("scriptFile")]
        public Input<string>? ScriptFile { get; set; }

        [Input("scriptFileArgs")]
        public Input<string>? ScriptFileArgs { get; set; }

        /// <summary>
        /// gives a single shell command to execute on the nodes.
        /// </summary>
        [Input("shellCommand")]
        public Input<string>? ShellCommand { get; set; }

        [Input("stepPlugins")]
        private InputList<Inputs.RundeckJobCommandStepPluginGetArgs>? _stepPlugins;
        public InputList<Inputs.RundeckJobCommandStepPluginGetArgs> StepPlugins
        {
            get => _stepPlugins ?? (_stepPlugins = new InputList<Inputs.RundeckJobCommandStepPluginGetArgs>());
            set => _stepPlugins = value;
        }

        public RundeckJobCommandGetArgs()
        {
        }
    }
}
